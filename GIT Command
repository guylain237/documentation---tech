Pour résoudre divers problèmes courants avec Git et GitHub, voici une synthèse des commandes essentielles et indispensables, classées par catégories, avec une brève explication de chacune :

Configuration
git config
Configure les paramètres de Git comme l'identité de l'utilisateur, l'email, etc.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git config --global user.name "Votre Nom"
git config --global user.email "votre@email.com"
Initialisation
git init

Initialise un nouveau dépôt Git dans le répertoire courant.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git init
git clone

Clone un dépôt existant depuis GitHub sur votre machine.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git clone https://github.com/utilisateur/nom-du-repo.git
Enregistrement des Changements
git add

Ajoute des fichiers modifiés à l'index pour être prêts à être validés (commités).
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git add nom-du-fichier
git commit

Enregistre les changements de l'index dans l'historique des versions.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git commit -m "Message du commit"
Examen de l'Histoire et des Changements
git status

Affiche l'état des fichiers dans le répertoire de travail et de l'index.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git status
git log

Affiche l'historique des commits.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git log
git diff

Montre les différences entre les fichiers modifiés qui ne sont pas encore indexés.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git diff nom-du-fichier
Branches
git branch

Liste toutes les branches locales.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git branch
git checkout

Bascule entre les branches ou restaure les fichiers d'un commit spécifique.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git checkout nom-de-la-branche
git merge

Fusionne les changements d'une branche dans une autre.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git merge nom-de-la-branche
git rebase

Réapplique les commits d'une branche sur une autre.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git rebase nom-de-la-branche
Collaboration
git fetch

Télécharge les derniers commits de la branche distante sans les fusionner.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git fetch origin
git pull

Récupère et fusionne les changements de la branche distante dans la branche locale.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git pull origin nom-de-la-branche
git push

Envoie les commits locaux vers la branche distante.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git push origin nom-de-la-branche
Résolution de Problèmes
git reset

Réinitialise l'état du dépôt pour un commit spécifique.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git reset --hard HEAD~1
git revert

Annule un commit existant en créant un nouveau commit.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git revert HEAD
git clean

Supprime les fichiers non suivis dans le répertoire de travail.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git clean -fd
Gestion des Tags
git tag

Crée, liste ou vérifie des tags annotés.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git tag -a v1.0 -m "Version 1.0"
git push --tags

Envoie les tags vers le dépôt distant.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git push --tags
Commandes Utiles Supplémentaires
git stash

Met de côté les modifications locales non indexées.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git stash
git bisect

Aide à trouver le commit qui a introduit un bug en utilisant une recherche binaire.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
 
git bisect start
